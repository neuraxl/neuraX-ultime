log.value += `${response}\n`;
const synth = window.speechSynthesis;
const msg = new SpeechSynthesisUtterance(response);
msg.lang = "fr-FR";
synth.speak(msg);
function sendMessage() {
  const input = document.getElementById("userInput");
  const log = document.getElementById("chatLog");
  const message = input.value.trim();
  if (!message) return;
  log.value += `Vous : ${message}\n`;
  input.value = "";
  setTimeout(() => {
    const response = `neuraX : ${simulateBotResponse(message)}`;
    log.value += `${response}\n`;
    log.scrollTop = log.scrollHeight;

    // Réponse vocale
    const synth = window.speechSynthesis;
    const msg = new SpeechSynthesisUtterance(response);
    msg.lang = "fr-FR";
    synth.speak(msg);
  }, 1000);
}
const socket = new WebSocket("wss://your-server.com/socket");

socket.onopen = () => {
  console.log("Connexion neuronale établie.");
  socket.send(JSON.stringify({ type: "neuron_join", id: "NeuraX-42" }));
};

socket.onmessage = (event) => {
  const data = JSON.parse(event.data);
  if (data.type === "neuron_broadcast") {
    speakPhrase(data.message);
  }
};

// Pour diffuser une pensée :
function broadcastThought(phrase) {
  socket.send(JSON.stringify({ type: "neuron_broadcast", message: phrase }));
}
// server.js
const express = require('express');
const axios = require('axios');
require('dotenv').config();
const app = express();
const port = 3000;

app.use(express.json());

// Route pour envoyer une requête à GPT-4
app.post('/chat', async (req, res) => {
  try {
    const response = await axios.post(
      'https://api.openai.com/v1/completions',
      {
        model: "gpt-4",
        prompt: req.body.prompt,
        max_tokens: 100
      },
      {
        headers: {
          'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`
        }
      }
    );
    res.json(response.data);
  } catch (error) {
    res.status(500).send(error.message);
  }
});

app.listen(port, () => {
  console.log(`Server running at http://localhost:${port}`);
});
