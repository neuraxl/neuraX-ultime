<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AIventures : L'Épopée Éducative de l'IA</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script crossorigin src="https://unpkg.com/react@18/umd/react.production.min.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.production.min.js"></script>
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #F9FAFB;
            color: #1F2937;
        }
        .section-heading {
            color: #4338CA;
        }
        .highlight-text {
            color: #4F46E5;
        }
        .nav-link {
            padding: 0.5rem 1rem;
            border-radius: 0.375rem;
            font-size: 0.875rem;
            font-weight: 500;
            color: #374151;
            transition: background-color 0.2s, color 0.2s;
        }
        .nav-link:hover {
            background-color: #E0E7FF;
            color: #4338CA;
        }
        .nav-link.active {
            background-color: #6366F1;
            color: white;
        }
        .custom-scrollbar::-webkit-scrollbar {
            width: 8px;
        }
        .custom-scrollbar::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 4px;
        }
        .custom-scrollbar::-webkit-scrollbar-thumb {
            background: #888;
            border-radius: 4px;
        }
        .custom-scrollbar::-webkit-scrollbar-thumb:hover {
            background: #555;
        }
    </style>
</head>
<body class="antialiased">
    <div id="root"></div>

    <script type="text/babel">
        const { useState, useEffect } = React;

        function App() {
            const [currentSection, setCurrentSection] = useState('accueil');
            const [avatarResponse, setAvatarResponse] = useState("Bonjour! Je suis votre mentor IA. Comment puis-je vous aider aujourd'hui?");
            const [userProgress, setUserProgress] = useState({ quizzesCompleted: 0, projectsCompleted: 0, xp: 0, badges: [] });

            useEffect(() => {
                const storedProgress = localStorage.getItem('aiventuresProgress');
                if (storedProgress) {
                    setUserProgress(JSON.parse(storedProgress));
                }
            }, []);

            const saveProgress = (newProgress) => {
                setUserProgress(newProgress);
                localStorage.setItem('aiventuresProgress', JSON.stringify(newProgress));
            };

            const interactWithAvatar = async (message) => {
                setAvatarResponse("Réflexion en cours...");
                setTimeout(() => {
                    if (message.toLowerCase().includes("bonjour")) {
                        setAvatarResponse("Salut! Ravi de vous revoir. Prêt pour une nouvelle aventure IA?");
                    } else if (message.toLowerCase().includes("quiz")) {
                        setAvatarResponse("Les quiz sont un excellent moyen de tester vos connaissances! Rendez-vous dans la section Quiz.");
                    } else if (message.toLowerCase().includes("projet")) {
                        setAvatarResponse("Les projets pratiques vous attendent! C'est le meilleur moyen d'apprendre en codant.");
                    } else if (message.toLowerCase().includes("progression")) {
                        setAvatarResponse(`Vous avez complété ${userProgress.quizzesCompleted} quiz et ${userProgress.projectsCompleted} projets. Vous avez ${userProgress.xp} XP.`);
                    } else {
                        setAvatarResponse("C'est une question intéressante! Je suis toujours en apprentissage, mais je ferai de mon mieux pour vous guider.");
                    }
                }, 1500);
            };

            const completeQuiz = (score) => {
                const newProgress = {
                    ...userProgress,
                    quizzesCompleted: userProgress.quizzesCompleted + 1,
                    xp: userProgress.xp + score,
                    badges: [...userProgress.badges]
                };
                if (score >= 80 && !newProgress.badges.includes("Maître Quiz")) {
                    newProgress.badges.push("Maître Quiz");
                }
                if (newProgress.quizzesCompleted >= 5 && !newProgress.badges.includes("Explorateur de Quiz")) {
                    newProgress.badges.push("Explorateur de Quiz");
                }
                saveProgress(newProgress);
                alert(`Quiz complété! Score: ${score}%. Vous avez gagné ${score} XP.`);
            };

            const completeProject = () => {
                const newProgress = {
                    ...userProgress,
                    projectsCompleted: userProgress.projectsCompleted + 1,
                    xp: userProgress.xp + 100,
                    badges: [...userProgress.badges]
                };
                if (newProgress.projectsCompleted >= 1 && !newProgress.badges.includes("Développeur IA")) {
                    newProgress.badges.push("Développeur IA");
                }
                if (newProgress.projectsCompleted >= 3 && !newProgress.badges.includes("Architecte IA")) {
                    newProgress.badges.push("Architecte IA");
                }
                saveProgress(newProgress);
                alert("Projet complété! Vous avez gagné 100 XP.");
            };

            const HomeSection = () => (
                <section id="accueil" className="text-center mb-12">
                    <h1 className="text-5xl font-extrabold section-heading mb-4">
                        AIventures : L'Épopée Éducative de l'IA
                    </h1>
                    <p className="text-xl text-gray-700 max-w-2xl mx-auto mb-8">
                        AIventures est désormais bien en place : une architecture React claire, un design pédagogique immersif et la promesse d’une épopée éducative dans l’univers de l’IA.
                    </p>
                    <div className="bg-gray-100 p-6 rounded-lg shadow-inner max-w-3xl mx-auto">
                        <h2 className="text-3xl font-bold section-heading mb-6">Ce que contient maintenant le projet :</h2>
                        <ul className="list-disc list-inside text-gray-700 space-y-2 pl-4 text-left">
                            <li>Accueil animé avec avatar <strong>Lottie</strong> (intégration à venir)</li>
                            <li>Navigation fluide entre les modules éducatifs et le dashboard</li>
                            <li>3 modules interactifs avec vidéos <strong>YouTube</strong> intégrées</li>
                            <li>Promesse de quiz et projets pratiques à venir</li>
                            <li>Responsive, prêt pour <strong>GitHub Pages</strong> avec <strong>Google Analytics</strong> intégré</li>
                        </ul>
                    </div>
                </section>
            );

            return (
                <main className="p-6">
                    <HomeSection />
                </main>
            );
        }

        ReactDOM.createRoot(document.getElementById('root')).render(<App />);
    </script>
</body>
</html>


